version: "3.4"

x-common: &common
  stdin_open: true
  tty: true
  restart: unless-stopped
  networks:
    - optics_rpa

x-django-build: &django-build
  build:
    context: .
    dockerfile: Dockerfile.dev


services:
  selenium-hub:
    image: selenium/hub:4.4.0-20220831
    container_name: optics_rpa-sh
    ports:
      - "4442:4442"
      - "4443:4443"
      - "4444:4444"
    <<: *common

  chrome:
    image: selenium/node-chrome:4.4.0-20220831
    shm_size: 2gb
    container_name: chrome
    volumes:
      - /dev/shm:/dev/shm
    depends_on:
      - selenium-hub
    environment:
      - HUB_HOST=selenium-hub
      - HUB_PORT=4444
      - NODE_MAX_INSTANCES=20
      - NODE_MAX_SESSION=20
      - SE_EVENT_BUS_HOST=selenium-hub
      - SE_EVENT_BUS_PUBLISH_PORT=4442
      - SE_EVENT_BUS_SUBSCRIBE_PORT=4443
      - SE_NODE_MAX_SESSIONS=4
      - SE_NODE_OVERRIDE_MAX_SESSIONS=true
    links:
      - selenium-hub
    <<: *common

  django:
    <<: *django-build
    container_name: optics_rpa-dc-01
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/code
      - optics_rpa_static_volume:/code/static
      - optics_rpa_media_volume:/code/media
    env_file:
      - ./.env
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
      - chrome
    <<: *common

  celery:
    <<: *django-build
    container_name: optics_rpa-cc-01
    restart: always
    command: bash -c "celery -A config worker -l info"
    volumes:
      - ./app:/app
    env_file:
      - ./.env
    depends_on:
      - postgres
      - django
      - redis
    <<: *common

  celery-beat:
    container_name: optics_rpa-cb-01
    <<: *django-build
    command: bash -c "celery -A config worker -l info --beat --scheduler django_celery_beat.schedulers:DatabaseScheduler"
    depends_on:
      - postgres
      - django
      - redis
    env_file:
      - ./.env
    volumes:
      - .:/code/
    <<: *common


  flower:
    image: mher/flower:0.9.7
    container_name: optics_rpa-fc01
    restart: unless-stopped
    command:
      [
        "flower",
        "--broker=redis://redis:6379/0",
        "--broker_api=redis://redis:6379/0",
        "--port=5555",
      ]
    ports:
      - "5555:5555"
    <<: *common


  redis:
    image: redis
    container_name: optics_rpa-rc01
    volumes:
      - optics_rpa_redis_data:/data
    ports:
      - "6379:6379"
    <<: *common

  postgres:
    image: postgres:13.3-alpine
    container_name: optics_rpa-pc01
    env_file:
      - ./.env
    ports:
      - "5432:5432"
    volumes:
      - optics_rpa_postgres_data:/var/lib/postgresql/data/
    <<: *common

networks:
  optics_rpa:
    driver: bridge

volumes:
  optics_rpa_postgres_data:
  optics_rpa_redis_data:
  optics_rpa_static_volume:
  optics_rpa_media_volume:
